{"title":{"en":"J. Rectangular Game","ru":"J. Прямоугольная игра"},"contestId":"405074","problemIndex":"J","timeLimit":{"en":"2 seconds","ru":"2 секунды"},"memLimit":{"en":"256 megabytes","ru":"256 мегабайт"},"inputFormat":{"en":"standard input","ru":"стандартный ввод"},"outputFormat":{"en":"standard output","ru":"стандартный вывод"},"problemHtml":{"en":"<p>The Smart Beaver from ABBYY decided to have a day off. But doing nothing the whole day turned out to be too boring, and he decided to play a game with pebbles. Initially, the Beaver has <span class=\"tex-span\"><i>n</i></span> pebbles. He arranges them in <span class=\"tex-span\"><i>a</i></span> equal rows, each row has <span class=\"tex-span\"><i>b</i></span> pebbles (<span class=\"tex-span\"><i>a</i> &gt; 1</span>). Note that the Beaver must use all the pebbles he has, i. e. <span class=\"tex-span\"><i>n</i> = <i>a</i>·<i>b</i></span>.</p><center> <img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/7f4dd23a2a6cd8290d060773328f7811098a6a8a.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"> <span class=\"tex-font-size-script\"> 10 pebbles are arranged in two rows, each row has 5 pebbles </span> </center><p>Once the Smart Beaver has arranged the pebbles, he takes back any of the resulting rows (that is, <span class=\"tex-span\"><i>b</i></span> pebbles) and discards all other pebbles. Then he arranges <span class=\"tex-font-style-bf\">all</span> his pebbles again (possibly choosing other values of <span class=\"tex-span\"><i>a</i></span> and <span class=\"tex-span\"><i>b</i></span>) and takes back one row, and so on. The game continues until at some point the Beaver ends up with exactly one pebble. </p><p>The game process can be represented as a finite sequence of integers <span class=\"tex-span\"><i>c</i><sub class=\"lower-index\">1</sub>, ..., <i>c</i><sub class=\"lower-index\"><i>k</i></sub></span>, where: </p><ul> <li> <span class=\"tex-span\"><i>c</i><sub class=\"lower-index\">1</sub> = <i>n</i></span> </li><li> <span class=\"tex-span\"><i>c</i><sub class=\"lower-index\"><i>i</i> + 1</sub></span> is the number of pebbles that the Beaver ends up with after the <span class=\"tex-span\"><i>i</i></span>-th move, that is, the number of pebbles in a row after some arrangement of <span class=\"tex-span\"><i>c</i><sub class=\"lower-index\"><i>i</i></sub></span> pebbles (<span class=\"tex-span\">1 ≤ <i>i</i> &lt; <i>k</i></span>). Note that <span class=\"tex-span\"><i>c</i><sub class=\"lower-index\"><i>i</i></sub> &gt; <i>c</i><sub class=\"lower-index\"><i>i</i> + 1</sub></span>. </li><li> <span class=\"tex-span\"><i>c</i><sub class=\"lower-index\"><i>k</i></sub> = 1</span> </li></ul><p>The result of the game is the sum of numbers <span class=\"tex-span\"><i>c</i><sub class=\"lower-index\"><i>i</i></sub></span>. You are given <span class=\"tex-span\"><i>n</i></span>. Find the maximum possible result of the game.</p>","ru":"<p>Умный Бобер из ABBYY решил устроить себе выходной. Но бездельничать целый день оказалось слишком скучно, и он решил поиграть в игру с камешками. Изначально у Бобра есть <span class=\"tex-span\"><i>n</i></span> камешков. Он раскладывает их в <span class=\"tex-span\"><i>a</i></span> одинаковых рядов по <span class=\"tex-span\"><i>b</i></span> штук в каждом (<span class=\"tex-span\"><i>a</i> &gt; 1</span>). Учтите, что Бобер обязательно использует все камешки, то есть <span class=\"tex-span\"><i>n</i> = <i>a</i>·<i>b</i></span>.</p><center> <img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/7f4dd23a2a6cd8290d060773328f7811098a6a8a.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"> <span class=\"tex-font-size-script\"> 10 камешков, разложенных в два ряда по 5 штук в каждом </span> </center><p>После того, как он разложил камешки, Умный Бобер забирает обратно любой из полученных рядов (то есть <span class=\"tex-span\"><i>b</i></span> камешков) и выбрасывает все остальные камешки. Затем он снова раскладывает <span class=\"tex-font-style-bf\">все</span> свои камешки (выбирая, возможно, другие <span class=\"tex-span\"><i>a</i></span> и <span class=\"tex-span\"><i>b</i></span>) и снова забирает себе один ряд, и так далее. Игра продолжается до тех пор, пока в какой-то момент у Бобра не останется ровно один камешек.</p><p>Игровой процесс можно представить себе как конечную последовательность целых чисел <span class=\"tex-span\"><i>c</i><sub class=\"lower-index\">1</sub>, ..., <i>c</i><sub class=\"lower-index\"><i>k</i></sub></span>, где: </p><ul> <li> <span class=\"tex-span\"><i>c</i><sub class=\"lower-index\">1</sub> = <i>n</i></span> </li><li> <span class=\"tex-span\"><i>c</i><sub class=\"lower-index\"><i>i</i> + 1</sub></span> — количество камешков, которые останутся у Бобра после <span class=\"tex-span\"><i>i</i></span>-ого хода, то есть количество камешков в ряду некоторого разложения <span class=\"tex-span\"><i>c</i><sub class=\"lower-index\"><i>i</i></sub></span> камешков (<span class=\"tex-span\">1 ≤ <i>i</i> &lt; <i>k</i></span>). Заметим, что <span class=\"tex-span\"><i>c</i><sub class=\"lower-index\"><i>i</i></sub> &gt; <i>c</i><sub class=\"lower-index\"><i>i</i> + 1</sub></span>. </li><li> <span class=\"tex-span\"><i>c</i><sub class=\"lower-index\"><i>k</i></sub> = 1</span> </li></ul><p>Результатом игры называется сумма чисел <span class=\"tex-span\"><i>c</i><sub class=\"lower-index\"><i>i</i></sub></span>. Вам дано число <span class=\"tex-span\"><i>n</i></span>. Найдите максимальный возможный результат игры.</p>"},"inSpecsHtml":{"en":"<div class=\"section-title\">Input</div><p>The single line of the input contains a single integer <span class=\"tex-span\"><i>n</i></span> — the initial number of pebbles the Smart Beaver has.</p><p>The input limitations for getting 30 points are: </p><ul> <li> <span class=\"tex-span\">2 ≤ <i>n</i> ≤ 50</span> </li></ul> <p>The input limitations for getting 100 points are: </p><ul> <li> <span class=\"tex-span\">2 ≤ <i>n</i> ≤ 10<sup class=\"upper-index\">9</sup></span> </li></ul> ","ru":"<div class=\"section-title\">Входные данные</div><p>Единственная строка входных данных содержит единственное целое число <span class=\"tex-span\"><i>n</i></span> — начальное количество камешков у Умного Бобра.</p><p>Ограничения на входные данные для получения 30 баллов: </p><ul> <li> <span class=\"tex-span\">2 ≤ <i>n</i> ≤ 50</span> </li></ul> <p>Ограничения на входные данные для получения 100 баллов: </p><ul> <li> <span class=\"tex-span\">2 ≤ <i>n</i> ≤ 10<sup class=\"upper-index\">9</sup></span> </li></ul> "},"outSpecsHtml":{"en":"<div class=\"section-title\">Output</div><p>Print a single number — the maximum possible result of the game.</p>","ru":"<div class=\"section-title\">Выходные данные</div><p>Выведите единственное целое число — максимальный возможный результат игры.</p>"},"noteHtml":{"en":"<div class=\"section-title\">Note</div><p>Consider the first example (<span class=\"tex-span\"><i>c</i><sub class=\"lower-index\">1</sub> = 10</span>). The possible options for the game development are:</p><ul> <li> Arrange the pebbles in 10 rows, one pebble per row. Then <span class=\"tex-span\"><i>c</i><sub class=\"lower-index\">2</sub> = 1</span>, and the game ends after the first move with the result of 11. </li><li> Arrange the pebbles in 5 rows, two pebbles per row. Then <span class=\"tex-span\"><i>c</i><sub class=\"lower-index\">2</sub> = 2</span>, and the game continues. During the second move we have two pebbles which can be arranged in a unique way (remember that you are not allowed to put all the pebbles in the same row!) — 2 rows, one pebble per row. <span class=\"tex-span\"><i>c</i><sub class=\"lower-index\">3</sub> = 1</span>, and the game ends with the result of 13. </li><li> Finally, arrange the pebbles in two rows, five pebbles per row. The same logic leads us to <span class=\"tex-span\"><i>c</i><sub class=\"lower-index\">2</sub> = 5, <i>c</i><sub class=\"lower-index\">3</sub> = 1</span>, and the game ends with the result of 16 — the maximum possible result. </li></ul>","ru":"<div class=\"section-title\">Примечание</div><p>Рассмотрим первый пример (<span class=\"tex-span\"><i>c</i><sub class=\"lower-index\">1</sub> = 10</span>). Возможные варианты развития игры:</p><ul> <li> Можно разложить камешки в 10 рядов по одному в каждом. Тогда <span class=\"tex-span\"><i>c</i><sub class=\"lower-index\">2</sub> = 1</span>, и игра закончится после первого же хода с результатом 11. </li><li> Можно разложить камешки в 5 рядов по два камешка в каждом. Тогда <span class=\"tex-span\"><i>c</i><sub class=\"lower-index\">2</sub> = 2</span>, и игра продолжается. На втором ходе 2 камешка можно разложить единственным способом (помните, что выкладывать все камешки в один ряд нельзя!) — в 2 ряда по одному камешку. <span class=\"tex-span\"><i>c</i><sub class=\"lower-index\">3</sub> = 1</span>, и игра закончится с результатом 13. </li><li> Наконец, можно разложить камешки в 2 ряда по пять камешков. Аналогичными рассуждениями получим <span class=\"tex-span\"><i>c</i><sub class=\"lower-index\">2</sub> = 5, <i>c</i><sub class=\"lower-index\">3</sub> = 1</span>, и игра закончится с результатом 16 — максимальным из возможных. </li></ul>"},"sampleTestcases":[{"id":1668667080229,"input":"10\n","output":"16\n"},{"id":1668667080230,"input":"8\n","output":"15\n"}],"submitUrl":"https://codeforces.com/gym/405074/submit","language":"c++","isPartOfContest":true}