{"title":{"en":"F. All Possible Digits","ru":"F. Всевозможные цифры"},"contestId":"1759","problemIndex":"F","timeLimit":{"en":"3 seconds","ru":"3 секунды"},"memLimit":{"en":"256 megabytes","ru":"256 мегабайт"},"inputFormat":{"en":"standard input","ru":"стандартный ввод"},"outputFormat":{"en":"standard output","ru":"стандартный вывод"},"problemHtml":{"en":"<p>A positive number $$$x$$$ of length $$$n$$$ in base $$$p$$$ ($$$2 \\le p \\le 10^9$$$) is written on the blackboard. The number $$$x$$$ is given as a sequence $$$a_1, a_2, \\dots, a_n$$$ ($$$0 \\le a_i &lt; p$$$) — the digits of $$$x$$$ in order from left to right (most significant to least significant).</p><p>Dmitry is very fond of all the digits of this number system, so he wants to see each of them at least once.</p><p>In one operation, he can: </p><ul> <li> take any number $$$x$$$ written on the board, increase it by $$$1$$$, and write the new value $$$x + 1$$$ on the board. </li></ul><p>For example, $$$p=5$$$ and $$$x=234_5$$$.</p><ul> <li> Initially, the board contains the numbers $$$2$$$, $$$3$$$ and $$$4$$$; </li><li> Dmitry increases the number $$$234_5$$$ by $$$1$$$ and writes down the number $$$240_5$$$. On the board there are numbers $$$0, 2, 3, 4$$$; </li><li> Dmitry increases the number $$$240_5$$$ by $$$1$$$ and writes down the number $$$241_5$$$. Now the board contains all the numbers from $$$0$$$ to $$$4$$$. </li></ul><p>Your task is to determine the minimum number of operations required to make all the digits from $$$0$$$ to $$$p-1$$$ appear on the board at least once.</p>","ru":"<p>На доске написано положительное число $$$x$$$ длины $$$n$$$ в системе счисления с основанием $$$p$$$ ($$$2 \\le p \\le 10^9$$$). Число $$$x$$$ задано в виде последовательности $$$a_1, a_2, \\dots, a_n$$$ ($$$0 \\le a_i &lt; p$$$) — цифры числа $$$x$$$ в порядке слева направо (от наиболее значащих к наименее).</p><p>Дмитрий очень любит все цифры данной системы счисления, поэтому он хочет увидеть каждую из них хотя бы один раз.</p><p>За одну операцию он может: </p><ul> <li> взять любое число $$$x$$$, написанное на доске, увеличить его на $$$1$$$, и выписать на доску новое значение $$$x + 1$$$. </li></ul><p>Например, $$$p=5$$$ и $$$x=234_5$$$.</p><ul> <li> Изначально на доске присутствуют цифры $$$2$$$, $$$3$$$ и $$$4$$$; </li><li> Дмитрий увеличивает число $$$234_5$$$ на $$$1$$$ и записывает число $$$240_5$$$. На доске присутствуют цифры $$$0, 2, 3, 4$$$; </li><li> Дмитрий увеличивает число $$$240_5$$$ на $$$1$$$ и записывает число $$$241_5$$$. Теперь на доске присутствуют все цифры от $$$0$$$ до $$$4$$$. </li></ul><p>Ваша задача — определить, за какое минимальное количество операций можно получить на доске все цифры от $$$0$$$ до $$$p-1$$$ хотя бы по одному разу.</p>"},"inSpecsHtml":{"en":"<div class=\"section-title\">Input</div><p>The first line of the input contains a single integer $$$t$$$ ($$$1 \\le t \\le 2 \\cdot 10^3$$$)&nbsp;— the number of test cases. The descriptions of the input test cases follow.</p><p>The first line of description of each test case contains two integers $$$n$$$ ($$$1 \\le n \\le 100$$$) and $$$p$$$ ($$$2 \\le p \\le 10^9$$$) — the length of the number and the base of the number system.</p><p>The second line of the description of each test case contains $$$n$$$ integers $$$a_1, a_2, \\dots, a_n$$$ ($$$0 \\le a_i &lt; p$$$) — digits of $$$x$$$ in number system with base $$$p$$$</p><p>It is guaranteed that the number $$$x$$$ does not contain leading zeros (that is, $$$a_1&gt;0$$$).</p>","ru":"<div class=\"section-title\">Входные данные</div><p>В первой строке входных данных дано единственное целое число $$$t$$$ ($$$1 \\le t \\le 2 \\cdot 10^3$$$)&nbsp;— количество наборов входных данных. Далее следуют описания наборов входных данных.</p><p>Первая строка описания каждого набора входных данных содержит два целых числа $$$n$$$ ($$$1 \\le n \\le 100$$$) и $$$p$$$ ($$$2 \\le p \\le 10^9$$$) — длина числа и основание системы счисления.</p><p>Вторая строка описания каждого набора входных данных содержит $$$n$$$ целых чисел $$$a_1, a_2, \\dots, a_n$$$ ($$$0 \\le a_i &lt; p$$$) — цифры числа $$$x$$$ в системе счисления с основанием $$$p$$$</p><p>Гарантируется, что число $$$x$$$ не содержит ведущих нулей (то есть, $$$a_1&gt;0$$$).</p>"},"outSpecsHtml":{"en":"<div class=\"section-title\">Output</div><p>For each test case print a single integer — the minimum number of operations required for Dmitry to get all the digits on the board from $$$0$$$ to $$$p-1$$$.</p><p>It can be shown that this always requires a finite number of operations.</p>","ru":"<div class=\"section-title\">Выходные данные</div><p>Для каждого набора входных данных выведите одно целое число — минимальное количество операций, за которое Дмитрий сможет получить на доске все цифры от $$$0$$$ до $$$p-1$$$.</p><p>Можно показать, что для этого всегда требуется конечное число операций.</p>"},"noteHtml":{"en":null,"ru":null},"sampleTestcases":[{"id":1668782837020,"input":"<div class=\"test-example-line test-example-line-even test-example-line-0\">11</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">2 3</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">1 2</div><div class=\"test-example-line test-example-line-even test-example-line-2\">4 2</div><div class=\"test-example-line test-example-line-even test-example-line-2\">1 1 1 1</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">6 6</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">1 2 3 4 5 0</div><div class=\"test-example-line test-example-line-even test-example-line-4\">5 2</div><div class=\"test-example-line test-example-line-even test-example-line-4\">1 0 1 0 1</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">3 10</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">1 2 3</div><div class=\"test-example-line test-example-line-even test-example-line-6\">5 1000</div><div class=\"test-example-line test-example-line-even test-example-line-6\">4 1 3 2 5</div><div class=\"test-example-line test-example-line-odd test-example-line-7\">3 5</div><div class=\"test-example-line test-example-line-odd test-example-line-7\">2 3 4</div><div class=\"test-example-line test-example-line-even test-example-line-8\">4 4</div><div class=\"test-example-line test-example-line-even test-example-line-8\">3 2 3 0</div><div class=\"test-example-line test-example-line-odd test-example-line-9\">1 3</div><div class=\"test-example-line test-example-line-odd test-example-line-9\">2</div><div class=\"test-example-line test-example-line-even test-example-line-10\">5 5</div><div class=\"test-example-line test-example-line-even test-example-line-10\">1 2 2 2 4</div><div class=\"test-example-line test-example-line-odd test-example-line-11\">3 4</div><div class=\"test-example-line test-example-line-odd test-example-line-11\">1 0 1</div>","output":"1\n1\n0\n0\n7\n995\n2\n1\n1\n1\n2\n"}],"submitUrl":"https://codeforces.com/contest/1759/submit","language":"c++","isPartOfContest":true}